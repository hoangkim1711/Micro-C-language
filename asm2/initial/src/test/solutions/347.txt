Program([FuncDecl(Id(mainfunc),[],IntType,Block([VarDecl(arr1,ArrayType(IntType,10)),VarDecl(i,IntType),VarDecl(n,IntType),VarDecl(md,IntType),VarDecl(c,IntType),VarDecl(low,IntType),VarDecl(hg,IntType),CallExpr(Id(printf),[StringLiteral( Recursion : Binary searching :)]),CallExpr(Id(printf),[StringLiteral(-----------------------------------)]),CallExpr(Id(printf),[StringLiteral( Input the number of elements to store in the array :)]),CallExpr(Id(scanf),[StringLiteral(%d),Id(n)]),CallExpr(Id(printf),[StringLiteral( Input %d numbers of elements in the array in ascending order :),Id(n)]),For(BinaryOp(=,Id(i),IntLiteral(0));BinaryOp(<,Id(i),Id(n));BinaryOp(=,Id(i),BinaryOp(+,Id(i),IntLiteral(1)));Block([CallExpr(Id(printf),[StringLiteral( element - %d : ),Id(i)]),CallExpr(Id(scanf),[StringLiteral(%d),ArrayCell(Id(arr1),IntLiteral(1))])])),CallExpr(Id(printf),[StringLiteral( Input the number to search : )]),CallExpr(Id(scanf),[StringLiteral(%d),Id(md)]),BinaryOp(=,Id(low),IntLiteral(0)),BinaryOp(=,Id(hg),BinaryOp(-,Id(n),IntLiteral(1))),BinaryOp(=,Id(c),CallExpr(Id(binarySearch),[Id(arr1),Id(n),Id(md),Id(low),Id(hg)])),If(BinaryOp(==,Id(c),IntLiteral(0)),CallExpr(Id(printf),[StringLiteral( The search number not exists in the array.)]),CallExpr(Id(printf),[StringLiteral( The search number found in the array.)])),Return(IntLiteral(0))])),FuncDecl(Id(binarySearch),[VarDecl(arr1,ArrayTypePointer(IntType)),VarDecl(n,IntType),VarDecl(md,IntType),VarDecl(low,IntType),VarDecl(hg,IntType)],IntType,Block([VarDecl(mid,IntType),VarDecl(c,IntType),If(BinaryOp(<=,Id(low),Id(hg)),Block([BinaryOp(=,Id(mid),BinaryOp(/,BinaryOp(+,Id(low),Id(hg)),IntLiteral(2))),If(BinaryOp(==,Id(md),ArrayCell(Id(arr1),IntLiteral(1))),BinaryOp(=,Id(c),IntLiteral(1))),If(BinaryOp(<,Id(md),ArrayCell(Id(arr1),IntLiteral(1))),Return(CallExpr(Id(binarySearch),[Id(arr1),Id(n),Id(md),Id(low),BinaryOp(-,Id(mid),IntLiteral(1))])),Return(CallExpr(Id(binarySearch),[Id(arr1),Id(n),Id(md),BinaryOp(+,Id(mid),IntLiteral(1)),Id(hg)])))]),Return(Id(c)))]))])